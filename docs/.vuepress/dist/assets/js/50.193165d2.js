(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{250:function(e,t,o){"use strict";o.r(t);var s=o(0),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"service-level-authorization-guide"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#service-level-authorization-guide","aria-hidden":"true"}},[e._v("#")]),e._v(" Service Level Authorization Guide")]),e._v(" "),o("h2",{attrs:{id:"purpose"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#purpose","aria-hidden":"true"}},[e._v("#")]),e._v(" Purpose")]),e._v(" "),o("p",[e._v("This document describes how to configure and manage Service Level Authorization for Hadoop.")]),e._v(" "),o("h2",{attrs:{id:"prerequisites"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites","aria-hidden":"true"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),o("p",[e._v("Make sure Hadoop is installed, configured and setup correctly. For more information see:")]),e._v(" "),o("ul",[o("li",[o("router-link",{attrs:{to:"/docs/hadoop-project-dist/hadoop-common/SingleCluster.html"}},[e._v("Single Node Setup")]),e._v(" for first-time users.")],1),e._v(" "),o("li",[o("router-link",{attrs:{to:"/docs/hadoop-project-dist/hadoop-common/ClusterSetup.html"}},[e._v("Cluster Setup")]),e._v(" for large, distributed clusters.")],1)]),e._v(" "),o("h2",{attrs:{id:"overview"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),o("p",[e._v("Service Level Authorization is the initial authorization mechanism to ensure clients connecting to a particular Hadoop service have the necessary, pre-configured, permissions and are authorized to access the given service. For example, a MapReduce cluster can use this mechanism to allow a configured list of users/groups to submit jobs.")]),e._v(" "),o("p",[e._v("The $HADOOP_CONF_DIR/hadoop-policy.xml configuration file is used to define the access control lists for various Hadoop services.")]),e._v(" "),o("p",[e._v("Service Level Authorization is performed much before to other access control checks such as file-permission checks, access control on job queues etc.")]),e._v(" "),o("h2",{attrs:{id:"configuration"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#configuration","aria-hidden":"true"}},[e._v("#")]),e._v(" Configuration")]),e._v(" "),o("p",[e._v("This section describes how to configure service-level authorization via the configuration file $HADOOP_CONF_DIR/hadoop-policy.xml.")]),e._v(" "),o("h3",{attrs:{id:"enable-service-level-authorization"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#enable-service-level-authorization","aria-hidden":"true"}},[e._v("#")]),e._v(" Enable Service Level Authorization")]),e._v(" "),o("p",[e._v("By default, service-level authorization is disabled for Hadoop. To enable it set the configuration property hadoop.security.authorization to true in $HADOOP_CONF_DIR/core-site.xml.")]),e._v(" "),o("h3",{attrs:{id:"hadoop-services-and-configuration-properties"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#hadoop-services-and-configuration-properties","aria-hidden":"true"}},[e._v("#")]),e._v(" Hadoop Services and Configuration Properties")]),e._v(" "),o("p",[e._v("This section lists the various Hadoop services and their configuration knobs:")]),e._v(" "),o("table",[o("thead",[o("tr",[o("th",[e._v("Property")]),e._v(" "),o("th",[e._v("Service")])])]),e._v(" "),o("tbody",[o("tr",[o("td",[e._v("security.client.protocol.acl")]),e._v(" "),o("td",[e._v("ACL for ClientProtocol, which is used by user code via the DistributedFileSystem.")])]),e._v(" "),o("tr",[o("td",[e._v("security.client.datanode.protocol.acl")]),e._v(" "),o("td",[e._v("ACL for ClientDatanodeProtocol, the client-to-datanode protocol for block recovery.")])]),e._v(" "),o("tr",[o("td",[e._v("security.datanode.protocol.acl")]),e._v(" "),o("td",[e._v("ACL for DatanodeProtocol, which is used by datanodes to communicate with the namenode.")])]),e._v(" "),o("tr",[o("td",[e._v("security.inter.datanode.protocol.acl")]),e._v(" "),o("td",[e._v("ACL for InterDatanodeProtocol, the inter-datanode protocol for updating generation timestamp.")])]),e._v(" "),o("tr",[o("td",[e._v("security.namenode.protocol.acl")]),e._v(" "),o("td",[e._v("ACL for NamenodeProtocol, the protocol used by the secondary namenode to communicate with the namenode.")])]),e._v(" "),o("tr",[o("td",[e._v("security.job.client.protocol.acl")]),e._v(" "),o("td",[e._v("ACL for JobSubmissionProtocol, used by job clients to communciate with the resourcemanager for job submission, querying job status etc.")])]),e._v(" "),o("tr",[o("td",[e._v("security.job.task.protocol.acl")]),e._v(" "),o("td",[e._v("ACL for TaskUmbilicalProtocol, used by the map and reduce tasks to communicate with the parent nodemanager.")])]),e._v(" "),o("tr",[o("td",[e._v("security.refresh.policy.protocol.acl")]),e._v(" "),o("td",[e._v("ACL for RefreshAuthorizationPolicyProtocol, used by the dfsadmin and rmadmin commands to refresh the security policy in-effect.")])]),e._v(" "),o("tr",[o("td",[e._v("security.ha.service.protocol.acl")]),e._v(" "),o("td",[e._v("ACL for HAService protocol used by HAAdmin to manage the active and stand-by states of namenode.")])])])]),e._v(" "),o("h3",{attrs:{id:"access-control-lists"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#access-control-lists","aria-hidden":"true"}},[e._v("#")]),e._v(" Access Control Lists")]),e._v(" "),o("p",[e._v("$HADOOP_CONF_DIR/hadoop-policy.xml defines an access control list for each Hadoop service. Every access control list has a simple format:")]),e._v(" "),o("p",[e._v("The list of users and groups are both comma separated list of names. The two lists are separated by a space.")]),e._v(" "),o("p",[e._v("Example: user1,user2 group1,group2.")]),e._v(" "),o("p",[e._v("Add a blank at the beginning of the line if only a list of groups is to be provided, equivalently a comma-separated list of users followed by a space or nothing implies only a set of given users.")]),e._v(" "),o("p",[e._v("A special value of * implies that all users are allowed to access the service.")]),e._v(" "),o("p",[e._v("If access control list is not defined for a service, the value of security.service.authorization.default.acl is applied. If security.service.authorization.default.acl is not defined, * is applied.")]),e._v(" "),o("h3",{attrs:{id:"blocked-access-control-lists"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#blocked-access-control-lists","aria-hidden":"true"}},[e._v("#")]),e._v(" Blocked Access Control Lists")]),e._v(" "),o("p",[e._v("In some cases, it is required to specify blocked access control list for a service. This specifies the list of users and groups who are not authorized to access the service. The format of the blocked access control list is same as that of access control list. The blocked access control list can be specified via $HADOOP_CONF_DIR/hadoop-policy.xml. The property name is derived by suffixing with “.blocked”.")]),e._v(" "),o("p",[e._v("Example: The property name of blocked access control list for security.client.protocol.acl will be security.client.protocol.acl.blocked")]),e._v(" "),o("p",[e._v("For a service, it is possible to specify both an access control list and a blocked control list. A user is authorized to access the service if the user is in the access control and not in the blocked access control list.")]),e._v(" "),o("p",[e._v("If blocked access control list is not defined for a service, the value of security.service.authorization.default.acl.blocked is applied. If security.service.authorization.default.acl.blocked is not defined, empty blocked access control list is applied.")]),e._v(" "),o("h3",{attrs:{id:"access-control-using-lists-of-ip-addresses-host-names-and-ip-ranges"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#access-control-using-lists-of-ip-addresses-host-names-and-ip-ranges","aria-hidden":"true"}},[e._v("#")]),e._v(" Access Control using Lists of IP Addresses, Host Names and IP Ranges")]),e._v(" "),o("p",[e._v("Access to a service can be controlled based on the ip address of the client accessing the service. It is possible to restrict access to a service from a set of machines by specifying a list of ip addresses, host names and ip ranges. The property name for each service is derived from the corresponding acl’s property name. If the property name of acl is security.client.protocol.acl, property name for the hosts list will be security.client.protocol.hosts.")]),e._v(" "),o("p",[e._v("If hosts list is not defined for a service, the value of security.service.authorization.default.hosts is applied. If security.service.authorization.default.hosts is not defined, * is applied.")]),e._v(" "),o("p",[e._v("It is possible to specify a blocked list of hosts. Only those machines which are in the hosts list, but not in the blocked hosts list will be granted access to the service. The property name is derived by suffixing with “.blocked”.")]),e._v(" "),o("p",[e._v("Example: The property name of blocked hosts list for security.client.protocol.hosts will be security.client.protocol.hosts.blocked")]),e._v(" "),o("p",[e._v("If blocked hosts list is not defined for a service, the value of security.service.authorization.default.hosts.blocked is applied. If security.service.authorization.default.hosts.blocked is not defined, empty blocked hosts list is applied.")]),e._v(" "),o("h3",{attrs:{id:"refreshing-service-level-authorization-configuration"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#refreshing-service-level-authorization-configuration","aria-hidden":"true"}},[e._v("#")]),e._v(" Refreshing Service Level Authorization Configuration")]),e._v(" "),o("p",[e._v("The service-level authorization configuration for the NameNode and ResourceManager can be changed without restarting either of the Hadoop master daemons. The cluster administrator can change $HADOOP_CONF_DIR/hadoop-policy.xml on the master nodes and instruct the NameNode and ResourceManager to reload their respective configurations via the -refreshServiceAcl switch to dfsadmin and rmadmin commands respectively.")]),e._v(" "),o("p",[e._v("Refresh the service-level authorization configuration for the NameNode:")]),e._v(" "),o("pre",[o("code",[e._v("   $ bin/hdfs dfsadmin -refreshServiceAcl\n")])]),e._v(" "),o("p",[e._v("Refresh the service-level authorization configuration for the ResourceManager:")]),e._v(" "),o("pre",[o("code",[e._v("   $ bin/yarn rmadmin -refreshServiceAcl\n")])]),e._v(" "),o("p",[e._v("Of course, one can use the security.refresh.policy.protocol.acl property in $HADOOP_CONF_DIR/hadoop-policy.xml to restrict access to the ability to refresh the service-level authorization configuration to certain users/groups.")]),e._v(" "),o("h3",{attrs:{id:"examples"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),o("p",[e._v("Allow only users alice, bob and users in the mapreduce group to submit jobs to the MapReduce cluster:")]),e._v(" "),o("pre",[o("code",[e._v("<property>\n     <name>security.job.client.protocol.acl</name>\n     <value>alice,bob mapreduce</value>\n</property>\n")])]),e._v(" "),o("p",[e._v("Allow only DataNodes running as the users who belong to the group datanodes to communicate with the NameNode:")]),e._v(" "),o("pre",[o("code",[e._v("<property>\n     <name>security.datanode.protocol.acl</name>\n     <value>datanodes</value>\n</property>\n")])]),e._v(" "),o("p",[e._v("Allow any user to talk to the HDFS cluster as a DFSClient:")]),e._v(" "),o("pre",[o("code",[e._v("<property>\n     <name>security.client.protocol.acl</name>\n     <value>*</value>\n</property>\n")])])])}),[],!1,null,null,null);t.default=r.exports}}]);