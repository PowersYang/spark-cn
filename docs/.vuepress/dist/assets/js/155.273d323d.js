(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{352:function(t,e,o){"use strict";o.r(e);var s=o(0),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"hadoop-hdfs-over-http-documentation-sets"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#hadoop-hdfs-over-http-documentation-sets"}},[t._v("#")]),t._v(" Hadoop HDFS over HTTP - Documentation Sets")]),t._v(" "),o("p",[t._v("HttpFS is a server that provides a REST HTTP gateway supporting all HDFS File System operations (read and write). And it is interoperable with the webhdfs REST HTTP API.")]),t._v(" "),o("p",[t._v("HttpFS can be used to transfer data between clusters running different versions of Hadoop (overcoming RPC versioning issues), for example using Hadoop DistCP.")]),t._v(" "),o("p",[t._v("HttpFS can be used to access data in HDFS on a cluster behind of a firewall (the HttpFS server acts as a gateway and is the only system that is allowed to cross the firewall into the cluster).")]),t._v(" "),o("p",[t._v("HttpFS can be used to access data in HDFS using HTTP utilities (such as curl and wget) and HTTP libraries Perl from other languages than Java.")]),t._v(" "),o("p",[t._v("The webhdfs client FileSystem implementation can be used to access HttpFS using the Hadoop filesystem command (hadoop fs) line tool as well as from Java applications using the Hadoop FileSystem Java API.")]),t._v(" "),o("p",[t._v("HttpFS has built-in security supporting Hadoop pseudo authentication and HTTP SPNEGO Kerberos and other pluggable authentication mechanisms. It also provides Hadoop proxy user support.")]),t._v(" "),o("h2",{attrs:{id:"how-does-httpfs-works"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#how-does-httpfs-works"}},[t._v("#")]),t._v(" How Does HttpFS Works?")]),t._v(" "),o("p",[t._v("HttpFS is a separate service from Hadoop NameNode.")]),t._v(" "),o("p",[t._v("HttpFS itself is Java Jetty web-application.")]),t._v(" "),o("p",[t._v("HttpFS HTTP web-service API calls are HTTP REST calls that map to a HDFS file system operation. For example, using the curl Unix command:")]),t._v(" "),o("ul",[o("li",[o("p",[t._v("$ curl 'http://httpfs-host:14000/webhdfs/v1/user/foo/README.txt?op=OPEN&user.name=foo' returns the contents of the HDFS /user/foo/README.txt file.")])]),t._v(" "),o("li",[o("p",[t._v("$ curl 'http://httpfs-host:14000/webhdfs/v1/user/foo?op=LISTSTATUS&user.name=foo' returns the contents of the HDFS /user/foo directory in JSON format.")])]),t._v(" "),o("li",[o("p",[t._v("$ curl 'http://httpfs-host:14000/webhdfs/v1/user/foo?op=GETTRASHROOT&user.name=foo' returns the path /user/foo/.Trash, if / is an encrypted zone, returns the path /.Trash/foo. See "),o("router-link",{attrs:{to:"/en/docs/hadoop-project-dist/hadoop-hdfs/TransparentEncryption.html#Rename_and_Trash_considerations"}},[t._v("more details")]),t._v(" about trash path in an encrypted zone.")],1)]),t._v(" "),o("li",[o("p",[t._v("$ curl -X POST 'http://httpfs-host:14000/webhdfs/v1/user/foo/bar?op=MKDIRS&user.name=foo' creates the HDFS /user/foo/bar directory.")])])]),t._v(" "),o("h2",{attrs:{id:"user-and-developer-documentation"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#user-and-developer-documentation"}},[t._v("#")]),t._v(" User and Developer Documentation")]),t._v(" "),o("ul",[o("li",[o("p",[o("router-link",{attrs:{to:"/en/docs/hadoop-hdfs-httpfs/ServerSetup.html"}},[t._v("HttpFS Server Setup")])],1)]),t._v(" "),o("li",[o("p",[o("router-link",{attrs:{to:"/en/docs/hadoop-hdfs-httpfs/UsingHttpTools.html"}},[t._v("Using HTTP Tools")])],1)])])])}),[],!1,null,null,null);e.default=a.exports}}]);