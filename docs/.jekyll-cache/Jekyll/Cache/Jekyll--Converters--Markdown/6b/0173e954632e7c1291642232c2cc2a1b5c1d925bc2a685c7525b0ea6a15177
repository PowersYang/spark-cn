I"‡(<h3 id="description">Description</h3>
<p>The <code>CREATE FUNCTION</code> statement is used to create a temporary or permanent function
in Spark. Temporary functions are scoped at a session level where as permanent
functions are created in the persistent catalog and are made available to
all sessions. The resources specified in the <code>USING</code> clause are made available
to all executors when they are executed for the first time. In addition to the
SQL interface, spark allows users to create custom user defined scalar and
aggregate functions using Scala, Python and Java APIs. Please refer to 
<a href="sql-getting-started.html#scalar-functions">scalar_functions</a> and 
<a href="sql-getting-started#aggregations">aggregate functions</a> for more information.</p>

<h3 id="syntax">Syntax</h3>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="k">CREATE</span> <span class="p">[</span> <span class="k">OR</span> <span class="k">REPLACE</span> <span class="p">]</span> <span class="p">[</span> <span class="k">TEMPORARY</span> <span class="p">]</span> <span class="k">FUNCTION</span> <span class="p">[</span> <span class="n">IF</span> <span class="k">NOT</span> <span class="k">EXISTS</span> <span class="p">]</span>
    <span class="n">function_name</span> <span class="k">AS</span> <span class="n">class_name</span> <span class="p">[</span> <span class="n">resource_locations</span> <span class="p">]</span></code></pre></figure>

<h3 id="parameters">Parameters</h3>
<dl>
  <dt><code><em>OR REPLACE</em></code></dt>
  <dd>
    If specified, the resources for the function are reloaded. This is mainly useful
    to pick up any changes made to the implementation of the function. This
    parameter is mutually exclusive to <code>IF NOT EXISTS</code> and can not
    be specified together.
  </dd>
  <dt><code><em>TEMPORARY</em></code></dt>
  <dd>
    Indicates the scope of function being created. When <code>TEMPORARY</code> is specified, the
    created function is valid and visible in the current session. No persistent
    entry is made in the catalog for these kind of functions.
  </dd>
  <dt><code><em>IF NOT EXISTS</em></code></dt>
  <dd>
    If specified, creates the function only when it does not exist. The creation
    of function succeeds (no error is thrown) if the specified function already
    exists in the system. This parameter is mutually exclusive to <code> OR REPLACE</code> 
    and can not be specified together.
  </dd>
  <dt><code><em>function_name</em></code></dt>
  <dd>
    Specifies a name of funnction to be created. The function name may be
    optionally qualified with a database name. <br /><br />
    <b>Syntax:</b>
      <code>
        [database_name.]function_name
      </code>
  </dd>
  <dt><code><em>class_name</em></code></dt>
  <dd>
    Specifies the name of the class that provides the implementation for function to be created.
    The implementing class should extend one of the base classes as follows:
    <ul>
      <li>Should extend <code>UDF</code> or <code>UDAF</code> in <code>org.apache.hadoop.hive.ql.exec</code> package.</li>
      <li>Should extend <code>AbstractGenericUDAFResolver</code>, <code>GenericUDF</code>, or
          <code>GenericUDTF</code> in <code>org.apache.hadoop.hive.ql.udf.generic</code> package.</li>
      <li>Should extend <code>UserDefinedAggregateFunction</code> in <code>org.apache.spark.sql.expressions</code> package.</li>
    </ul>
  </dd>
  <dt><code><em>resource_locations</em></code></dt>
  <dd>
    Specifies the list of resources that contain the implementation of the function
    along with its dependencies. <br /><br />
    <b>Syntax:</b>
      <code>
        USING { { (JAR | FILE ) resource_uri} , ...}
      </code>
  </dd>
</dl>

<h3 id="examples">Examples</h3>

<figure class="highlight"><pre><code class="language-sql" data-lang="sql"><span class="c1">-- 1. Create a simple UDF `SimpleUdf` that increments the supplied integral value by 10.</span>
<span class="c1">--    import org.apache.hadoop.hive.ql.exec.UDF;</span>
<span class="c1">--    public class SimpleUdf extends UDF {</span>
<span class="c1">--      public int evaluate(int value) {</span>
<span class="c1">--        return value + 10;</span>
<span class="c1">--      }</span>
<span class="c1">--    }</span>
<span class="c1">-- 2. Compile and place it in a JAR file called `SimpleUdf.jar` in /tmp.</span>

<span class="c1">-- Create a table called `test` and insert two rows.</span>
<span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">test</span><span class="p">(</span><span class="n">c1</span> <span class="nb">INT</span><span class="p">);</span>
<span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">test</span> <span class="k">VALUES</span> <span class="p">(</span><span class="mi">1</span><span class="p">),</span> <span class="p">(</span><span class="mi">2</span><span class="p">);</span>

<span class="c1">-- Create a permanent function called `simple_udf`. </span>
<span class="k">CREATE</span> <span class="k">FUNCTION</span> <span class="n">simple_udf</span> <span class="k">AS</span> <span class="s1">'SimpleUdf'</span>
  <span class="k">USING</span> <span class="n">JAR</span> <span class="s1">'/tmp/SimpleUdf.jar'</span><span class="p">;</span>

<span class="c1">-- Verify that the function is in the registry.</span>
<span class="k">SHOW</span> <span class="k">USER</span> <span class="n">FUNCTIONS</span><span class="p">;</span>
  <span class="o">+</span><span class="c1">------------------+</span>
  <span class="o">|</span>          <span class="k">function</span><span class="o">|</span>
  <span class="o">+</span><span class="c1">------------------+</span>
  <span class="o">|</span><span class="k">default</span><span class="p">.</span><span class="n">simple_udf</span><span class="o">|</span>
  <span class="o">+</span><span class="c1">------------------+</span>

<span class="c1">-- Invoke the function. Every selected value should be incremented by 10.</span>
<span class="k">SELECT</span> <span class="n">simple_udf</span><span class="p">(</span><span class="n">c1</span><span class="p">)</span> <span class="k">AS</span> <span class="n">function_return_value</span> <span class="k">FROM</span> <span class="n">t1</span><span class="p">;</span>
  <span class="o">+</span><span class="c1">---------------------+                                                         </span>
  <span class="o">|</span><span class="n">function_return_value</span><span class="o">|</span>
  <span class="o">+</span><span class="c1">---------------------+</span>
  <span class="o">|</span>                   <span class="mi">11</span><span class="o">|</span>
  <span class="o">|</span>                   <span class="mi">12</span><span class="o">|</span>
  <span class="o">+</span><span class="c1">---------------------+</span>

<span class="c1">-- Created a temporary function.</span>
<span class="k">CREATE</span> <span class="k">TEMPORARY</span> <span class="k">FUNCTION</span> <span class="n">simple_temp_udf</span> <span class="k">AS</span> <span class="s1">'SimpleUdf'</span> 
  <span class="k">USING</span> <span class="n">JAR</span> <span class="s1">'/tmp/SimpleUdf.jar'</span><span class="p">;</span>

<span class="c1">-- Verify that the newly created temporary function is in the registry.</span>
<span class="c1">-- Please note that the temporary function does not have a qualified</span>
<span class="c1">-- database associated with it.</span>
<span class="k">SHOW</span> <span class="k">USER</span> <span class="n">FUNCTIONS</span><span class="p">;</span>
  <span class="o">+</span><span class="c1">------------------+</span>
  <span class="o">|</span>          <span class="k">function</span><span class="o">|</span>
  <span class="o">+</span><span class="c1">------------------+</span>
  <span class="o">|</span><span class="k">default</span><span class="p">.</span><span class="n">simple_udf</span><span class="o">|</span>
  <span class="o">|</span>   <span class="n">simple_temp_udf</span><span class="o">|</span>
  <span class="o">+</span><span class="c1">------------------+</span>

<span class="c1">-- 1. Modify `SimpleUdf`'s implementation to add supplied integral value by 20.</span>
<span class="c1">--    import org.apache.hadoop.hive.ql.exec.UDF;</span>
  
<span class="c1">--    public class SimpleUdfR extends UDF {</span>
<span class="c1">--      public int evaluate(int value) {</span>
<span class="c1">--        return value + 20;</span>
<span class="c1">--      }</span>
<span class="c1">--    }</span>
<span class="c1">-- 2. Compile and place it in a jar file called `SimpleUdfR.jar` in /tmp.</span>

<span class="c1">-- Replace the implementation of `simple_udf`</span>
<span class="k">CREATE</span> <span class="k">OR</span> <span class="k">REPLACE</span> <span class="k">FUNCTION</span> <span class="n">simple_udf</span> <span class="k">AS</span> <span class="s1">'SimpleUdfR'</span>
  <span class="k">USING</span> <span class="n">JAR</span> <span class="s1">'/tmp/SimpleUdfR.jar'</span><span class="p">;</span>

<span class="c1">-- Invoke the function. Every selected value should be incremented by 20.</span>
<span class="k">SELECT</span> <span class="n">simple_udf</span><span class="p">(</span><span class="n">c1</span><span class="p">)</span> <span class="k">AS</span> <span class="n">function_return_value</span> <span class="k">FROM</span> <span class="n">t1</span><span class="p">;</span>
<span class="o">+</span><span class="c1">---------------------+                                                         </span>
<span class="o">|</span><span class="n">function_return_value</span><span class="o">|</span>
<span class="o">+</span><span class="c1">---------------------+</span>
<span class="o">|</span>                   <span class="mi">21</span><span class="o">|</span>
<span class="o">|</span>                   <span class="mi">22</span><span class="o">|</span>
<span class="o">+</span><span class="c1">---------------------+</span></code></pre></figure>

<h3 id="related-statements">Related statements</h3>
<ul>
  <li><a href="sql-ref-syntax-aux-show-functions.html">SHOW FUNCTIONS</a></li>
  <li><a href="sql-ref-syntax-aux-describe-function.html">DESCRIBE FUNCTION</a></li>
  <li><a href="sql-ref-syntax-ddl-drop-function.html">DROP FUNCTION</a></li>
</ul>
:ET