[0m[[0mdebug[0m] [0m[naha] [0m
[0m[[0mdebug[0m] [0m[naha] Initial source changes: [0m
[0m[[0mdebug[0m] [0m[naha] 	removed:Set()[0m
[0m[[0mdebug[0m] [0m[naha] 	added: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataWriter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/JsonUtils.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaStreamingWrite.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceRDD.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeCalculator.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeLimit.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriteTask.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataConsumer.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRecordToRowConverter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatch.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSink.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchWrite.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package-info.java, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchPartitionReader.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceOffset.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceInitialOffsetWriter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/ConsumerStrategy.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/CachedKafkaProducer.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetReader.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/FetchedDataPool.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/InternalKafkaConsumerPool.scala)[0m
[0m[[0mdebug[0m] [0m[naha] 	modified: Set()[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated products: Set()[0m
[0m[[0mdebug[0m] [0m[naha] External API changes: API Changes: Set()[0m
[0m[[0mdebug[0m] [0m[naha] Modified binary dependencies: Set()[0m
[0m[[0mdebug[0m] [0m[naha] Initial directly invalidated sources: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataWriter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/JsonUtils.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaStreamingWrite.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceRDD.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeCalculator.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeLimit.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriteTask.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataConsumer.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRecordToRowConverter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatch.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSink.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchWrite.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package-info.java, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchPartitionReader.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceOffset.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceInitialOffsetWriter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/ConsumerStrategy.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/CachedKafkaProducer.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetReader.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/FetchedDataPool.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/InternalKafkaConsumerPool.scala)[0m
[0m[[0mdebug[0m] [0m[naha] [0m
[0m[[0mdebug[0m] [0m[naha] Sources indirectly invalidated by:[0m
[0m[[0mdebug[0m] [0m[naha] 	product: Set()[0m
[0m[[0mdebug[0m] [0m[naha] 	binary dep: Set()[0m
[0m[[0mdebug[0m] [0m[naha] 	external source: Set()[0m
[0m[[0mdebug[0m] [0mAll initially invalidated sources: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataWriter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/JsonUtils.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaStreamingWrite.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceRDD.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeCalculator.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeLimit.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriteTask.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataConsumer.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRecordToRowConverter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatch.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSink.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchWrite.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package-info.java, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchPartitionReader.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceOffset.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceInitialOffsetWriter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/ConsumerStrategy.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/CachedKafkaProducer.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetReader.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/FetchedDataPool.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/InternalKafkaConsumerPool.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataWriter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/JsonUtils.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaStreamingWrite.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceRDD.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeCalculator.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeLimit.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriteTask.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataConsumer.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRecordToRowConverter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatch.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSink.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchWrite.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package-info.java, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchPartitionReader.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceOffset.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceInitialOffsetWriter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/ConsumerStrategy.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/CachedKafkaProducer.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetReader.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/FetchedDataPool.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/InternalKafkaConsumerPool.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Recompiling all 28 sources: invalidated sources (28) exceeded 50.0% of all sources[0m
[0m[[0minfo[0m] [0mCompiling 27 Scala sources and 1 Java source to /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/target/scala-2.12/classes...[0m
[0m[[0mdebug[0m] [0mGetting org.scala-sbt:compiler-interface:0.13.18:component from component compiler for Scala 2.12.10[0m
[0m[[0mdebug[0m] [0mGetting org.scala-sbt:compiler-interface:0.13.18:component from component compiler for Scala 2.12.10[0m
[0m[[0mdebug[0m] [0mRunning cached compiler 37adf4db, interfacing (CompilerInterface) with Scala compiler version 2.12.10[0m
[0m[[0mdebug[0m] [0mCalling Scala compiler with arguments  (CompilerInterface):[0m
[0m[[0mdebug[0m] [0m	-unchecked[0m
[0m[[0mdebug[0m] [0m	-deprecation[0m
[0m[[0mdebug[0m] [0m	-feature[0m
[0m[[0mdebug[0m] [0m	-explaintypes[0m
[0m[[0mdebug[0m] [0m	-target:jvm-1.8[0m
[0m[[0mdebug[0m] [0m	-P:genjavadoc:out=/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/target/java[0m
[0m[[0mdebug[0m] [0m	-P:genjavadoc:strictVisibility=true[0m
[0m[[0mdebug[0m] [0m	-Xplugin:/Users/ysir/.ivy2/cache/com.typesafe.genjavadoc/genjavadoc-plugin_2.12.10/jars/genjavadoc-plugin_2.12.10-0.14.jar[0m
[0m[[0mdebug[0m] [0m	-target:jvm-1.8[0m
[0m[[0mdebug[0m] [0m	-sourcepath[0m
[0m[[0mdebug[0m] [0m	/Users/ysir/Documents/GitHub/spark[0m
[0m[[0mdebug[0m] [0m	-bootclasspath[0m
[0m[[0mdebug[0m] [0m	/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/classes:/Users/ysir/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.10.jar[0m
[0m[[0mdebug[0m] [0m	-classpath[0m
[0m[[0mdebug[0m] [0m	/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/target/scala-2.12/classes:/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-token-provider/target/scala-2.12/spark-token-provider-kafka-0-10_2.12-3.0.0-SNAPSHOT.jar:/Users/ysir/Documents/GitHub/spark/core/target/scala-2.12/spark-core_2.12-3.0.0-SNAPSHOT.jar:/Users/ysir/Documents/GitHub/spark/launcher/target/scala-2.12/spark-launcher_2.12-3.0.0-SNAPSHOT.jar:/Users/ysir/Documents/GitHub/spark/common/tags/target/scala-2.12/spark-tags_2.12-3.0.0-SNAPSHOT.jar:/Users/ysir/Documents/GitHub/spark/common/kvstore/target/scala-2.12/spark-kvstore_2.12-3.0.0-SNAPSHOT.jar:/Users/ysir/Documents/GitHub/spark/common/network-common/target/scala-2.12/spark-network-common_2.12-3.0.0-SNAPSHOT.jar:/Users/ysir/Documents/GitHub/spark/common/network-shuffle/target/scala-2.12/spark-network-shuffle_2.12-3.0.0-SNAPSHOT.jar:/Users/ysir/Documents/GitHub/spark/common/unsafe/target/scala-2.12/spark-unsafe_2.12-3.0.0-SNAPSHOT.jar:/Users/ysir/Documents/GitHub/spark/sql/core/target/scala-2.12/spark-sql_2.12-3.0.0-SNAPSHOT.jar:/Users/ysir/Documents/GitHub/spark/common/sketch/target/scala-2.12/spark-sketch_2.12-3.0.0-SNAPSHOT.jar:/Users/ysir/Documents/GitHub/spark/sql/catalyst/target/scala-2.12/spark-catalyst_2.12-3.0.0-SNAPSHOT.jar:/Users/ysir/.ivy2/cache/org.spark-project.spark/unused/jars/unused-1.0.0.jar:/Users/ysir/.ivy2/cache/org.fusesource.leveldbjni/leveldbjni-all/bundles/leveldbjni-all-1.8.jar:/Users/ysir/.ivy2/cache/com.fasterxml.jackson.core/jackson-core/bundles/jackson-core-2.10.0.jar:/Users/ysir/.ivy2/cache/com.fasterxml.jackson.core/jackson-databind/bundles/jackson-databind-2.10.0.jar:/Users/ysir/.ivy2/cache/com.fasterxml.jackson.core/jackson-annotations/bundles/jackson-annotations-2.10.0.jar:/Users/ysir/.ivy2/cache/io.netty/netty-all/jars/netty-all-4.1.42.Final.jar:/Users/ysir/.ivy2/cache/org.apache.commons/commons-lang3/jars/commons-lang3-3.8.1.jar:/Users/ysir/.ivy2/cache/io.dropwizard.metrics/metrics-core/bundles/metrics-core-3.2.6.jar:/Users/ysir/.ivy2/cache/com.google.guava/guava/bundles/guava-14.0.1.jar:/Users/ysir/.ivy2/cache/org.apache.commons/commons-crypto/jars/commons-crypto-1.0.0.jar:/Users/ysir/.ivy2/cache/com.twitter/chill_2.12/jars/chill_2.12-0.9.3.jar:/Users/ysir/.ivy2/cache/com.twitter/chill-java/jars/chill-java-0.9.3.jar:/Users/ysir/.ivy2/cache/com.esotericsoftware/kryo-shaded/bundles/kryo-shaded-4.0.2.jar:/Users/ysir/.ivy2/cache/com.esotericsoftware/minlog/bundles/minlog-1.3.0.jar:/Users/ysir/.ivy2/cache/org.objenesis/objenesis/jars/objenesis-2.5.1.jar:/Users/ysir/.ivy2/cache/org.apache.avro/avro/jars/avro-1.8.2.jar:/Users/ysir/.ivy2/cache/org.codehaus.jackson/jackson-core-asl/jars/jackson-core-asl-1.9.13.jar:/Users/ysir/.ivy2/cache/org.codehaus.jackson/jackson-mapper-asl/jars/jackson-mapper-asl-1.9.13.jar:/Users/ysir/.ivy2/cache/org.xerial.snappy/snappy-java/bundles/snappy-java-1.1.7.3.jar:/Users/ysir/.ivy2/cache/org.apache.commons/commons-compress/jars/commons-compress-1.8.1.jar:/Users/ysir/.ivy2/cache/org.tukaani/xz/jars/xz-1.5.jar:/Users/ysir/.ivy2/cache/org.apache.avro/avro-mapred/jars/avro-mapred-1.8.2-hadoop2.jar:/Users/ysir/.ivy2/cache/org.apache.avro/avro-ipc/jars/avro-ipc-1.8.2.jar:/Users/ysir/.ivy2/cache/org.apache.xbean/xbean-asm7-shaded/bundles/xbean-asm7-shaded-4.14.jar:/Users/ysir/.ivy2/cache/org.apache.hadoop/hadoop-client/jars/hadoop-client-2.7.4.jar:/Users/ysir/.ivy2/cache/org.apache.hadoop/hadoop-common/jars/hadoop-common-2.7.4.jar:/Users/ysir/.ivy2/cache/org.apache.hadoop/hadoop-annotations/jars/hadoop-annotations-2.7.4.jar:/Users/ysir/.ivy2/cache/commons-cli/commons-cli/jars/commons-cli-1.2.jar:/Users/ysir/.ivy2/cache/org.apache.commons/commons-math3/jars/commons-math3-3.4.1.jar:/Users/ysir/.ivy2/cache/xmlenc/xmlenc/jars/xmlenc-0.52.jar:/Users/ysir/.ivy2/cache/commons-httpclient/commons-httpclient/jars/commons-httpclient-3.1.jar:/Users/ysir/.ivy2/cache/commons-io/commons-io/jars/commons-io-2.4.jar:/Users/ysir/.ivy2/cache/commons-net/commons-net/jars/commons-net-3.1.jar:/Users/ysir/.ivy2/cache/commons-collections/commons-collections/jars/commons-collections-3.2.2.jar:/Users/ysir/.ivy2/cache/org.mortbay.jetty/jetty-sslengine/jars/jetty-sslengine-6.1.26.jar:/Users/ysir/.ivy2/cache/log4j/log4j/bundles/log4j-1.2.17.jar:/Users/ysir/.ivy2/cache/commons-lang/commons-lang/jars/commons-lang-2.6.jar:/Users/ysir/.ivy2/cache/commons-configuration/commons-configuration/jars/commons-configuration-1.6.jar:/Users/ysir/.ivy2/cache/commons-digester/commons-digester/jars/commons-digester-1.8.jar:/Users/ysir/.ivy2/cache/commons-beanutils/commons-beanutils/jars/commons-beanutils-1.7.0.jar:/Users/ysir/.ivy2/cache/com.google.protobuf/protobuf-java/bundles/protobuf-java-2.5.0.jar:/Users/ysir/.ivy2/cache/com.google.code.gson/gson/jars/gson-2.2.4.jar:/Users/ysir/.ivy2/cache/org.apache.hadoop/hadoop-auth/jars/hadoop-auth-2.7.4.jar:/Users/ysir/.ivy2/cache/org.apache.httpcomponents/httpclient/jars/httpclient-4.2.5.jar:/Users/ysir/.ivy2/cache/org.apache.httpcomponents/httpcore/jars/httpcore-4.2.4.jar:/Users/ysir/.ivy2/cache/org.apache.directory.server/apacheds-kerberos-codec/bundles/apacheds-kerberos-codec-2.0.0-M15.jar:/Users/ysir/.ivy2/cache/org.apache.directory.server/apacheds-i18n/bundles/apacheds-i18n-2.0.0-M15.jar:/Users/ysir/.ivy2/cache/org.apache.directory.api/api-asn1-api/bundles/api-asn1-api-1.0.0-M20.jar:/Users/ysir/.ivy2/cache/org.apache.directory.api/api-util/bundles/api-util-1.0.0-M20.jar:/Users/ysir/.ivy2/cache/org.apache.zookeeper/zookeeper/jars/zookeeper-3.4.14.jar:/Users/ysir/.ivy2/cache/org.slf4j/slf4j-log4j12/jars/slf4j-log4j12-1.7.25.jar:/Users/ysir/.ivy2/cache/com.github.spotbugs/spotbugs-annotations/jars/spotbugs-annotations-3.1.9.jar:/Users/ysir/.ivy2/cache/com.google.code.findbugs/jsr305/jars/jsr305-3.0.2.jar:/Users/ysir/.ivy2/cache/org.apache.yetus/audience-annotations/jars/audience-annotations-0.5.0.jar:/Users/ysir/.ivy2/cache/org.apache.curator/curator-framework/bundles/curator-framework-2.7.1.jar:/Users/ysir/.ivy2/cache/org.apache.curator/curator-client/bundles/curator-client-2.7.1.jar:/Users/ysir/.ivy2/cache/org.apache.curator/curator-recipes/bundles/curator-recipes-2.7.1.jar:/Users/ysir/.ivy2/cache/org.apache.htrace/htrace-core/jars/htrace-core-3.1.0-incubating.jar:/Users/ysir/.ivy2/cache/org.apache.hadoop/hadoop-hdfs/jars/hadoop-hdfs-2.7.4.jar:/Users/ysir/.ivy2/cache/org.mortbay.jetty/jetty-util/jars/jetty-util-6.1.26.jar:/Users/ysir/.ivy2/cache/xerces/xercesImpl/jars/xercesImpl-2.9.1.jar:/Users/ysir/.ivy2/cache/xml-apis/xml-apis/jars/xml-apis-1.3.04.jar:/Users/ysir/.ivy2/cache/org.apache.hadoop/hadoop-mapreduce-client-app/jars/hadoop-mapreduce-client-app-2.7.4.jar:/Users/ysir/.ivy2/cache/org.apache.hadoop/hadoop-mapreduce-client-common/jars/hadoop-mapreduce-client-common-2.7.4.jar:/Users/ysir/.ivy2/cache/org.apache.hadoop/hadoop-yarn-common/jars/hadoop-yarn-common-2.7.4.jar:/Users/ysir/.ivy2/cache/org.apache.hadoop/hadoop-yarn-api/jars/hadoop-yarn-api-2.7.4.jar:/Users/ysir/.ivy2/cache/javax.xml.bind/jaxb-api/jars/jaxb-api-2.2.2.jar:/Users/ysir/.ivy2/cache/javax.xml.stream/stax-api/jars/stax-api-1.0-2.jar:/Users/ysir/.ivy2/cache/javax.activation/activation/jars/activation-1.1.1.jar:/Users/ysir/.ivy2/cache/org.codehaus.jackson/jackson-jaxrs/jars/jackson-jaxrs-1.9.13.jar:/Users/ysir/.ivy2/cache/org.codehaus.jackson/jackson-xc/jars/jackson-xc-1.9.13.jar:/Users/ysir/.ivy2/cache/com.google.inject/guice/jars/guice-3.0.jar:/Users/ysir/.ivy2/cache/javax.inject/javax.inject/jars/javax.inject-1.jar:/Users/ysir/.ivy2/cache/aopalliance/aopalliance/jars/aopalliance-1.0.jar:/Users/ysir/.ivy2/cache/org.sonatype.sisu.inject/cglib/jars/cglib-2.2.1-v20090111.jar:/Users/ysir/.ivy2/cache/org.apache.hadoop/hadoop-yarn-client/jars/hadoop-yarn-client-2.7.4.jar:/Users/ysir/.ivy2/cache/org.apache.hadoop/hadoop-mapreduce-client-core/jars/hadoop-mapreduce-client-core-2.7.4.jar:/Users/ysir/.ivy2/cache/org.apache.hadoop/hadoop-yarn-server-common/jars/hadoop-yarn-server-common-2.7.4.jar:/Users/ysir/.ivy2/cache/org.apache.hadoop/hadoop-mapreduce-client-shuffle/jars/hadoop-mapreduce-client-shuffle-2.7.4.jar:/Users/ysir/.ivy2/cache/org.apache.hadoop/hadoop-mapreduce-client-jobclient/jars/hadoop-mapreduce-client-jobclient-2.7.4.jar:/Users/ysir/.ivy2/cache/javax.servlet.jsp/jsp-api/jars/jsp-api-2.1.jar:/Users/ysir/.ivy2/cache/org.codehaus.jettison/jettison/bundles/jettison-1.1.jar:/Users/ysir/.ivy2/cache/org.eclipse.jetty/jetty-plus/jars/jetty-plus-9.4.18.v20190429.jar:/Users/ysir/.ivy2/cache/org.eclipse.jetty/jetty-webapp/jars/jetty-webapp-9.4.18.v20190429.jar:/Users/ysir/.ivy2/cache/org.eclipse.jetty/jetty-xml/jars/jetty-xml-9.4.18.v20190429.jar:/Users/ysir/.ivy2/cache/org.eclipse.jetty/jetty-util/jars/jetty-util-9.4.18.v20190429.jar:/Users/ysir/.ivy2/cache/org.eclipse.jetty/jetty-servlet/jars/jetty-servlet-9.4.18.v20190429.jar:/Users/ysir/.ivy2/cache/org.eclipse.jetty/jetty-security/jars/jetty-security-9.4.18.v20190429.jar:/Users/ysir/.ivy2/cache/org.eclipse.jetty/jetty-server/jars/jetty-server-9.4.18.v20190429.jar:/Users/ysir/.ivy2/cache/javax.servlet/javax.servlet-api/jars/javax.servlet-api-3.1.0.jar:/Users/ysir/.ivy2/cache/org.eclipse.jetty/jetty-http/jars/jetty-http-9.4.18.v20190429.jar:/Users/ysir/.ivy2/cache/org.eclipse.jetty/jetty-io/jars/jetty-io-9.4.18.v20190429.jar:/Users/ysir/.ivy2/cache/org.eclipse.jetty/jetty-jndi/jars/jetty-jndi-9.4.18.v20190429.jar:/Users/ysir/.ivy2/cache/org.eclipse.jetty/jetty-continuation/jars/jetty-continuation-9.4.18.v20190429.jar:/Users/ysir/.ivy2/cache/org.eclipse.jetty/jetty-proxy/jars/jetty-proxy-9.4.18.v20190429.jar:/Users/ysir/.ivy2/cache/org.eclipse.jetty/jetty-client/jars/jetty-client-9.4.18.v20190429.jar:/Users/ysir/.ivy2/cache/org.eclipse.jetty/jetty-servlets/jars/jetty-servlets-9.4.18.v20190429.jar:/Users/ysir/.ivy2/cache/org.apache.commons/commons-text/jars/commons-text-1.6.jar:/Users/ysir/.ivy2/cache/org.slf4j/jul-to-slf4j/jars/jul-to-slf4j-1.7.16.jar:/Users/ysir/.ivy2/cache/org.slf4j/jcl-over-slf4j/jars/jcl-over-slf4j-1.7.16.jar:/Users/ysir/.ivy2/cache/com.ning/compress-lzf/bundles/compress-lzf-1.0.3.jar:/Users/ysir/.ivy2/cache/org.lz4/lz4-java/jars/lz4-java-1.6.0.jar:/Users/ysir/.ivy2/cache/com.github.luben/zstd-jni/jars/zstd-jni-1.4.3-1.jar:/Users/ysir/.ivy2/cache/org.roaringbitmap/RoaringBitmap/jars/RoaringBitmap-0.7.45.jar:/Users/ysir/.ivy2/cache/org.roaringbitmap/shims/jars/shims-0.7.45.jar:/Users/ysir/.ivy2/cache/org.scala-lang.modules/scala-xml_2.12/bundles/scala-xml_2.12-1.2.0.jar:/Users/ysir/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.12.10.jar:/Users/ysir/.ivy2/cache/org.json4s/json4s-jackson_2.12/jars/json4s-jackson_2.12-3.6.6.jar:/Users/ysir/.ivy2/cache/org.json4s/json4s-core_2.12/jars/json4s-core_2.12-3.6.6.jar:/Users/ysir/.ivy2/cache/org.json4s/json4s-ast_2.12/jars/json4s-ast_2.12-3.6.6.jar:/Users/ysir/.ivy2/cache/org.json4s/json4s-scalap_2.12/jars/json4s-scalap_2.12-3.6.6.jar:/Users/ysir/.ivy2/cache/com.thoughtworks.paranamer/paranamer/bundles/paranamer-2.8.jar:/Users/ysir/.ivy2/cache/org.glassfish.jersey.core/jersey-client/jars/jersey-client-2.29.jar:/Users/ysir/.ivy2/cache/jakarta.ws.rs/jakarta.ws.rs-api/bundles/jakarta.ws.rs-api-2.1.5.jar:/Users/ysir/.ivy2/cache/org.glassfish.jersey.core/jersey-common/jars/jersey-common-2.29.jar:/Users/ysir/.ivy2/cache/jakarta.annotation/jakarta.annotation-api/jars/jakarta.annotation-api-1.3.4.jar:/Users/ysir/.ivy2/cache/org.glassfish.hk2.external/jakarta.inject/jars/jakarta.inject-2.5.0.jar:/Users/ysir/.ivy2/cache/org.glassfish.hk2/osgi-resource-locator/jars/osgi-resource-locator-1.0.3.jar:/Users/ysir/.ivy2/cache/org.glassfish.jersey.core/jersey-server/jars/jersey-server-2.29.jar:/Users/ysir/.ivy2/cache/org.glassfish.jersey.media/jersey-media-jaxb/jars/jersey-media-jaxb-2.29.jar:/Users/ysir/.ivy2/cache/javax.validation/validation-api/jars/validation-api-2.0.1.Final.jar:/Users/ysir/.ivy2/cache/org.glassfish.jersey.containers/jersey-container-servlet/jars/jersey-container-servlet-2.29.jar:/Users/ysir/.ivy2/cache/org.glassfish.jersey.containers/jersey-container-servlet-core/jars/jersey-container-servlet-core-2.29.jar:/Users/ysir/.ivy2/cache/org.glassfish.jersey.inject/jersey-hk2/jars/jersey-hk2-2.29.jar:/Users/ysir/.ivy2/cache/org.glassfish.hk2/hk2-locator/jars/hk2-locator-2.5.0.jar:/Users/ysir/.ivy2/cache/org.glassfish.hk2.external/aopalliance-repackaged/jars/aopalliance-repackaged-2.5.0.jar:/Users/ysir/.ivy2/cache/org.glassfish.hk2/hk2-api/jars/hk2-api-2.5.0.jar:/Users/ysir/.ivy2/cache/org.glassfish.hk2/hk2-utils/jars/hk2-utils-2.5.0.jar:/Users/ysir/.ivy2/cache/org.javassist/javassist/bundles/javassist-3.22.0-CR2.jar:/Users/ysir/.ivy2/cache/com.clearspring.analytics/stream/jars/stream-2.9.6.jar:/Users/ysir/.ivy2/cache/io.dropwizard.metrics/metrics-jvm/bundles/metrics-jvm-3.2.6.jar:/Users/ysir/.ivy2/cache/io.dropwizard.metrics/metrics-json/bundles/metrics-json-3.2.6.jar:/Users/ysir/.ivy2/cache/io.dropwizard.metrics/metrics-graphite/bundles/metrics-graphite-3.2.6.jar:/Users/ysir/.ivy2/cache/com.fasterxml.jackson.module/jackson-module-scala_2.12/bundles/jackson-module-scala_2.12-2.10.0.jar:/Users/ysir/.ivy2/cache/com.fasterxml.jackson.module/jackson-module-paranamer/bundles/jackson-module-paranamer-2.10.0.jar:/Users/ysir/.ivy2/cache/org.apache.ivy/ivy/jars/ivy-2.4.0.jar:/Users/ysir/.ivy2/cache/oro/oro/jars/oro-2.0.8.jar:/Users/ysir/.ivy2/cache/net.razorvine/pyrolite/jars/pyrolite-4.30.jar:/Users/ysir/.ivy2/cache/net.sf.py4j/py4j/jars/py4j-0.10.8.1.jar:/Users/ysir/.ivy2/cache/org.apache.kafka/kafka-clients/jars/kafka-clients-2.3.1.jar:/Users/ysir/.ivy2/cache/org.slf4j/slf4j-api/jars/slf4j-api-1.7.26.jar:/Users/ysir/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.1.2.jar:/Users/ysir/.ivy2/cache/org.codehaus.janino/janino/jars/janino-3.0.15.jar:/Users/ysir/.ivy2/cache/org.codehaus.janino/commons-compiler/jars/commons-compiler-3.0.15.jar:/Users/ysir/.ivy2/cache/org.antlr/antlr4-runtime/jars/antlr4-runtime-4.7.1.jar:/Users/ysir/.ivy2/cache/commons-codec/commons-codec/jars/commons-codec-1.10.jar:/Users/ysir/.ivy2/cache/com.univocity/univocity-parsers/jars/univocity-parsers-2.8.3.jar:/Users/ysir/.ivy2/cache/org.apache.arrow/arrow-vector/jars/arrow-vector-0.12.0.jar:/Users/ysir/.ivy2/cache/org.apache.arrow/arrow-format/jars/arrow-format-0.12.0.jar:/Users/ysir/.ivy2/cache/com.google.flatbuffers/flatbuffers-java/bundles/flatbuffers-java-1.9.0.jar:/Users/ysir/.ivy2/cache/org.apache.arrow/arrow-memory/jars/arrow-memory-0.12.0.jar:/Users/ysir/.ivy2/cache/joda-time/joda-time/jars/joda-time-2.9.9.jar:/Users/ysir/.ivy2/cache/com.carrotsearch/hppc/bundles/hppc-0.7.2.jar:/Users/ysir/.ivy2/cache/org.apache.orc/orc-core/jars/orc-core-1.5.7-nohive.jar:/Users/ysir/.ivy2/cache/org.apache.orc/orc-shims/jars/orc-shims-1.5.7.jar:/Users/ysir/.ivy2/cache/io.airlift/aircompressor/jars/aircompressor-0.10.jar:/Users/ysir/.ivy2/cache/org.apache.orc/orc-mapreduce/jars/orc-mapreduce-1.5.7-nohive.jar:/Users/ysir/.ivy2/cache/org.apache.parquet/parquet-column/jars/parquet-column-1.10.1.jar:/Users/ysir/.ivy2/cache/org.apache.parquet/parquet-common/jars/parquet-common-1.10.1.jar:/Users/ysir/.ivy2/cache/org.apache.parquet/parquet-format/jars/parquet-format-2.4.0.jar:/Users/ysir/.ivy2/cache/org.apache.parquet/parquet-encoding/jars/parquet-encoding-1.10.1.jar:/Users/ysir/.ivy2/cache/org.apache.parquet/parquet-hadoop/jars/parquet-hadoop-1.10.1.jar:/Users/ysir/.ivy2/cache/org.apache.parquet/parquet-jackson/jars/parquet-jackson-1.10.1.jar:/Users/ysir/.ivy2/cache/org.apache.commons/commons-pool2/jars/commons-pool2-2.6.2.jar[0m
[0m[[33mwarn[0m] [0m/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataConsumer.scala:74: method poll in class KafkaConsumer is deprecated: see corresponding Javadoc for more information.[0m
[0m[[33mwarn[0m] [0m    val p = consumer.poll(pollTimeoutMs)[0m
[0m[[33mwarn[0m] [0m                     ^[0m
[0m[[33mwarn[0m] [0m/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetReader.scala:119: method poll in trait Consumer is deprecated: see corresponding Javadoc for more information.[0m
[0m[[33mwarn[0m] [0m    consumer.poll(0)[0m
[0m[[33mwarn[0m] [0m             ^[0m
[0m[[33mwarn[0m] [0m/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetReader.scala:382: method poll in trait Consumer is deprecated: see corresponding Javadoc for more information.[0m
[0m[[33mwarn[0m] [0m      consumer.poll(0)[0m
[0m[[33mwarn[0m] [0m               ^[0m
[0m[[33mwarn[0m] [0mthree warnings found[0m
[0m[[0mdebug[0m] [0mScala compilation took 4.505072017 s[0m
[0m[[0mdebug[0m] [0mJava compilation took 1.439303096 s[0m
[0m[[0mdebug[0m] [0mJava analysis took 0.002577291 s[0m
[0m[[0mdebug[0m] [0mJava compile + analysis took 1.45262941 s[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriter.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriter.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriter.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriter.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriter.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, validateQuery$default$3, wait, $asInstanceOf, topicExpression, equals, headersExpression, asInstanceOf, initializeLogIfNecessary, synchronized, VALUE_ATTRIBUTE_NAME, $isInstanceOf, topicExpression$default$2, KafkaWriter, logTrace, isTraceEnabled, initializeLogIfNecessary$default$2, KEY_ATTRIBUTE_NAME, keyExpression, write$default$4, logName, notifyAll, isInstanceOf, TOPIC_ATTRIBUTE_NAME, ==, clone, partitionExpression, validateQuery, $init$, valueExpression, toString, logError, !=, getClass, HEADERS_ATTRIBUTE_NAME, logWarning, PARTITION_ATTRIBUTE_NAME, ne, eq, write, log, ##, finalize, hashCode, logDebug, logInfo.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaStreamingWrite.scala: Set(asInstanceOf, KafkaWriter, isInstanceOf, ==, validateQuery, toString, eq, write)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriteTask.scala: Set(topicExpression, headersExpression, asInstanceOf, KafkaWriter, keyExpression, ==, partitionExpression, valueExpression, toString, !=)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSink.scala: Set(KafkaWriter, write, logInfo)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala: Set(asInstanceOf, KafkaWriter, isInstanceOf, ==, toString, !=, logWarning, ne, write, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchWrite.scala: Set(asInstanceOf, KafkaWriter, isInstanceOf, ==, validateQuery, toString, eq, write)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatch.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatch.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatch.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatch.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatch.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, $asInstanceOf, equals, asInstanceOf, initializeLogIfNecessary, synchronized, $isInstanceOf, logTrace, isTraceEnabled, initializeLogIfNecessary$default$2, logName, notifyAll, isInstanceOf, <init>, ==, clone, $init$, planInputPartitions, KafkaBatch, pollTimeoutMs, toString, createReaderFactory, logError, !=, getClass, logWarning, ne, eq, log, ##, finalize, hashCode, logDebug, logInfo.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala: Set(asInstanceOf, isInstanceOf, <init>, ==, KafkaBatch, toString, !=, logWarning, ne, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/FetchedDataPool.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/FetchedDataPool.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/FetchedDataPool.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/FetchedDataPool.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/FetchedDataPool.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, unapply, wait, numTotal, numCreated, $asInstanceOf, empty, productArity, equals, fetchedData, asInstanceOf, initializeLogIfNecessary, synchronized, invalidate, $isInstanceOf, logTrace, canEqual, lastAcquiredTimestamp, isTraceEnabled, initializeLogIfNecessary$default$2, productPrefix, logName, notifyAll, getObject, isInstanceOf, shutdown, <init>, apply, ==, clone, $init$, copy, reset, toString, logError, !=, release, getClass, FetchedDataPool, logWarning, copy$default$1, CachedFetchedData, ne, CachedFetchedDataList, lastReleasedTimestamp, eq, productIterator, log, acquire, inUse, ##, finalize, productElement, hashCode, logDebug, logInfo.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataConsumer.scala: Set(fetchedData, asInstanceOf, invalidate, isInstanceOf, shutdown, <init>, apply, ==, reset, toString, !=, release, FetchedDataPool, logWarning, ne, eq, acquire, logDebug)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchPartitionReader.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchPartitionReader.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchPartitionReader.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchPartitionReader.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchPartitionReader.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, copy$default$2, $asInstanceOf, copy$default$5, productArity, equals, asInstanceOf, offsetRange, createColumnarReader, synchronized, includeHeaders, $isInstanceOf, canEqual, copy$default$4, productPrefix, notifyAll, supportColumnarReads, isInstanceOf, failOnDataLoss, <init>, createReader, ==, clone, $init$, copy$default$3, copy, pollTimeoutMs, toString, preferredLocations, KafkaBatchInputPartition, !=, getClass, copy$default$1, executorKafkaParams, ne, KafkaBatchReaderFactory, eq, productIterator, ##, finalize, productElement, hashCode.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatch.scala: Set(includeHeaders, failOnDataLoss, <init>, pollTimeoutMs, toString, KafkaBatchInputPartition, !=, executorKafkaParams, ne, KafkaBatchReaderFactory)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala: Set(asInstanceOf, includeHeaders, isInstanceOf, failOnDataLoss, <init>, ==, pollTimeoutMs, toString, KafkaBatchInputPartition, !=, executorKafkaParams, ne, KafkaBatchReaderFactory)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, readSchema, capabilities, kafkaParamsForProducer, newScanBuilder, name, wait, KafkaTable, $asInstanceOf, TOPIC_OPTION_KEY, sourceSchema, CUSTOM_GROUP_ID_ERROR_MESSAGE, equals, FETCH_OFFSET_NUM_RETRY, kafkaParamsForDriver, description, asInstanceOf, initializeLogIfNecessary, toMicroBatchStream, STARTING_OFFSETS_BY_TIMESTAMP_OPTION_KEY, batchUniqueGroupId, synchronized, getKafkaOffsetRangeLimit, kafkaParamsForExecutors, includeHeaders, $isInstanceOf, logTrace, STARTING_OFFSETS_OPTION_KEY, KafkaScan, isTraceEnabled, initializeLogIfNecessary$default$2, logName, notifyAll, isInstanceOf, <init>, ENDING_OFFSETS_OPTION_KEY, schema, createSink, toBatch, properties, FETCH_OFFSET_RETRY_INTERVAL_MS, ==, clone, partitioning, getTable, toContinuousStream, newWriteBuilder, $init$, MAX_OFFSET_PER_TRIGGER, KafkaSourceProvider, toString, INSTRUCTION_FOR_FAIL_ON_DATA_LOSS_FALSE, createRelation, logError, !=, ENDING_OFFSETS_BY_TIMESTAMP_OPTION_KEY, getClass, logWarning, shortName, MIN_PARTITIONS_OPTION_KEY, CONSUMER_POLL_TIMEOUT, ne, INCLUDE_HEADERS, createSource, INSTRUCTION_FOR_FAIL_ON_DATA_LOSS_TRUE, eq, log, ##, finalize, hashCode, logDebug, logInfo.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriter.scala: Set(name, TOPIC_OPTION_KEY, <init>, schema, ==, KafkaSourceProvider)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeCalculator.scala: Set(asInstanceOf, isInstanceOf, <init>, ==, KafkaSourceProvider, toString, MIN_PARTITIONS_OPTION_KEY, eq, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriteTask.scala: Set(TOPIC_OPTION_KEY, asInstanceOf, <init>, ==, KafkaSourceProvider, toString, !=)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataConsumer.scala: Set(asInstanceOf, isInstanceOf, <init>, ==, KafkaSourceProvider, toString, INSTRUCTION_FOR_FAIL_ON_DATA_LOSS_FALSE, !=, logWarning, ne, INSTRUCTION_FOR_FAIL_ON_DATA_LOSS_TRUE, eq, logDebug)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatch.scala: Set(kafkaParamsForDriver, batchUniqueGroupId, kafkaParamsForExecutors, includeHeaders, <init>, KafkaSourceProvider, toString, !=, CONSUMER_POLL_TIMEOUT, ne)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala: Set(CUSTOM_GROUP_ID_ERROR_MESSAGE, asInstanceOf, includeHeaders, isInstanceOf, <init>, ==, MAX_OFFSET_PER_TRIGGER, KafkaSourceProvider, toString, INSTRUCTION_FOR_FAIL_ON_DATA_LOSS_FALSE, !=, logWarning, CONSUMER_POLL_TIMEOUT, ne, INCLUDE_HEADERS, INSTRUCTION_FOR_FAIL_ON_DATA_LOSS_TRUE, logDebug, logInfo)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala: Set(CUSTOM_GROUP_ID_ERROR_MESSAGE, asInstanceOf, synchronized, includeHeaders, isInstanceOf, <init>, ==, KafkaSourceProvider, toString, INSTRUCTION_FOR_FAIL_ON_DATA_LOSS_FALSE, !=, logWarning, CONSUMER_POLL_TIMEOUT, ne, INCLUDE_HEADERS, INSTRUCTION_FOR_FAIL_ON_DATA_LOSS_TRUE, eq, logInfo)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala: Set(CUSTOM_GROUP_ID_ERROR_MESSAGE, asInstanceOf, synchronized, includeHeaders, isInstanceOf, <init>, schema, ==, MAX_OFFSET_PER_TRIGGER, KafkaSourceProvider, toString, INSTRUCTION_FOR_FAIL_ON_DATA_LOSS_FALSE, !=, logWarning, CONSUMER_POLL_TIMEOUT, ne, INCLUDE_HEADERS, INSTRUCTION_FOR_FAIL_ON_DATA_LOSS_TRUE, hashCode, logDebug, logInfo)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala: Set(kafkaParamsForDriver, batchUniqueGroupId, kafkaParamsForExecutors, includeHeaders, <init>, schema, KafkaSourceProvider, toString, !=, CONSUMER_POLL_TIMEOUT, ne, logInfo)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetReader.scala: Set(FETCH_OFFSET_NUM_RETRY, asInstanceOf, synchronized, isInstanceOf, <init>, FETCH_OFFSET_RETRY_INTERVAL_MS, ==, KafkaSourceProvider, toString, !=, logWarning, ne, logDebug)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/InternalKafkaConsumerPool.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/InternalKafkaConsumerPool.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/InternalKafkaConsumerPool.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/InternalKafkaConsumerPool.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/InternalKafkaConsumerPool.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	setMinIdlePerKey, notify, getSoftMinEvictableIdleTimeMillis, setJmxEnabled, getTestOnCreate, numActive, getMaxTotalPerKey, setTestOnBorrow, getMinIdlePerKey, wait, getEvictorShutdownTimeoutMillis, getTestOnReturn, $asInstanceOf, size, borrowObject, setTestOnReturn, setFairness, equals, asInstanceOf, initializeLogIfNecessary, destroyObject, numIdle, getJmxNamePrefix, synchronized, CustomSwallowedExceptionListener, activateObject, $isInstanceOf, getMaxTotal, create, keyToKafkaParams, logTrace, isTraceEnabled, getNumTestsPerEvictionRun, initializeLogIfNecessary$default$2, logName, notifyAll, getMaxIdlePerKey, softMaxSize, isInstanceOf, invalidateKey, setSoftMinEvictableIdleTimeMillis, passivateObject, getEvictionPolicyClassName, getTestOnBorrow, invalidateObject, <init>, setTestWhileIdle, getMaxWaitMillis, wrap, toStringAppendFields, setMaxIdlePerKey, getFairness, setMaxWaitMillis, ==, setJmxNamePrefix, clone, setBlockWhenExhausted, InternalKafkaConsumerPool, $init$, setEvictionPolicy, makeObject, getBlockWhenExhausted, getJmxNameBase, getEvictionPolicy, validateObject, ObjectFactory, reset, returnObject, setMaxTotal, toString, setEvictorShutdownTimeoutMillis, setNumTestsPerEvictionRun, setMaxTotalPerKey, PoolConfig, logError, !=, setTestOnCreate, getMinEvictableIdleTimeMillis, getClass, logWarning, setLifo, getTestWhileIdle, setTimeBetweenEvictionRunsMillis, close, setJmxNameBase, ne, setEvictionPolicyClassName, init, setMinEvictableIdleTimeMillis, eq, onSwallowException, log, getLifo, ##, finalize, getJmxEnabled, hashCode, getTimeBetweenEvictionRunsMillis, logDebug, logInfo.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataConsumer.scala: Set(size, borrowObject, asInstanceOf, isInstanceOf, invalidateKey, <init>, ==, InternalKafkaConsumerPool, reset, returnObject, toString, !=, logWarning, close, ne, eq, logDebug)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSink.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSink.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSink.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSink.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSink.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, capabilities, name, wait, $asInstanceOf, equals, asInstanceOf, initializeLogIfNecessary, synchronized, $isInstanceOf, logTrace, isTraceEnabled, initializeLogIfNecessary$default$2, logName, notifyAll, isInstanceOf, <init>, schema, properties, ==, clone, partitioning, KafkaSink, $init$, toString, logError, !=, getClass, logWarning, ne, addBatch, eq, log, ##, finalize, hashCode, logDebug, logInfo.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala: Set(asInstanceOf, isInstanceOf, <init>, schema, ==, KafkaSink, toString, !=, logWarning, ne, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataWriter.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataWriter.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataWriter.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataWriter.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataWriter.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, KafkaDataWriter, wait, $asInstanceOf, commit, projection, equals, failedWrite, asInstanceOf, synchronized, $isInstanceOf, checkForErrors, notifyAll, isInstanceOf, <init>, ==, sendRow, clone, toString, !=, getClass, close, ne, eq, write, ##, finalize, hashCode, abort.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaStreamingWrite.scala: Set(KafkaDataWriter, asInstanceOf, isInstanceOf, <init>, ==, toString, eq, write)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchWrite.scala: Set(KafkaDataWriter, asInstanceOf, isInstanceOf, <init>, ==, toString, eq, write)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, KafkaContinuousInputPartition, needsReconfiguration, wait, copy$default$2, $asInstanceOf, topicPartition, commit, copy$default$5, createContinuousReaderFactory, mergeOffsets, productArity, equals, KafkaContinuousReaderFactory, asInstanceOf, initializeLogIfNecessary, createColumnarReader, initialOffset, synchronized, includeHeaders, $isInstanceOf, offsetReader, logTrace, canEqual, copy$default$4, isTraceEnabled, initializeLogIfNecessary$default$2, productPrefix, stop, logName, notifyAll, supportColumnarReads, isInstanceOf, kafkaParams, failOnDataLoss, <init>, createReader, KafkaContinuousPartitionReader, ==, clone, $init$, planInputPartitions, next, copy$default$3, copy, startOffset, pollTimeoutMs, toString, preferredLocations, deserializeOffset, getOffset, logError, !=, get, getClass, logWarning, copy$default$1, close, KafkaContinuousStream, copy$default$6, ne, knownPartitions, eq, productIterator, log, ##, finalize, productElement, hashCode, logDebug, logInfo.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala: Set(asInstanceOf, includeHeaders, isInstanceOf, failOnDataLoss, <init>, ==, toString, !=, get, logWarning, KafkaContinuousStream, ne, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaStreamingWrite.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaStreamingWrite.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaStreamingWrite.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaStreamingWrite.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaStreamingWrite.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, createStreamingWriterFactory, $asInstanceOf, commit, equals, asInstanceOf, synchronized, $isInstanceOf, notifyAll, isInstanceOf, KafkaStreamingWrite, <init>, ==, clone, toString, !=, getClass, ne, eq, ##, finalize, hashCode, abort.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala: Set(asInstanceOf, isInstanceOf, KafkaStreamingWrite, <init>, ==, toString, !=, ne, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, latestOffset, $asInstanceOf, commit, equals, asInstanceOf, initializeLogIfNecessary, initialOffset, synchronized, $isInstanceOf, logTrace, isTraceEnabled, initializeLogIfNecessary$default$2, stop, logName, notifyAll, isInstanceOf, <init>, ==, clone, kafkaOffsetReader, $init$, planInputPartitions, KafkaMicroBatchStream, pollTimeoutMs, toString, createReaderFactory, deserializeOffset, logError, !=, getClass, logWarning, maxOffsetsPerTrigger, ne, eq, log, ##, finalize, hashCode, logDebug, logInfo.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala: Set(asInstanceOf, isInstanceOf, <init>, ==, kafkaOffsetReader, KafkaMicroBatchStream, toString, !=, logWarning, ne, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceOffset.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceOffset.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceOffset.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceOffset.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceOffset.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, unapply, wait, copy$default$2, $asInstanceOf, topicPartition, productArity, equals, json, asInstanceOf, synchronized, $isInstanceOf, canEqual, partitionOffset, productPrefix, notifyAll, isInstanceOf, getPartitionOffsets, <init>, apply, ==, clone, KafkaSourcePartitionOffset, $init$, copy, toString, !=, getClass, copy$default$1, KafkaSourceOffset, ne, eq, productIterator, ##, finalize, partitionToOffsets, productElement, hashCode.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala: Set(json, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, !=, KafkaSourceOffset, ne, partitionToOffsets)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala: Set(topicPartition, json, asInstanceOf, synchronized, partitionOffset, isInstanceOf, <init>, apply, ==, KafkaSourcePartitionOffset, toString, !=, KafkaSourceOffset, ne, eq, partitionToOffsets)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala: Set(topicPartition, asInstanceOf, synchronized, isInstanceOf, getPartitionOffsets, <init>, apply, ==, toString, !=, KafkaSourceOffset, ne, partitionToOffsets, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceInitialOffsetWriter.scala: Set(json, <init>, apply, ==, toString, KafkaSourceOffset)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetReader.scala: Set(unapply, asInstanceOf, synchronized, isInstanceOf, <init>, apply, ==, toString, !=, KafkaSourceOffset, ne, partitionToOffsets)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceInitialOffsetWriter.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceInitialOffsetWriter.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceInitialOffsetWriter.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceInitialOffsetWriter.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceInitialOffsetWriter.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, metadataPath, wait, KafkaSourceInitialOffsetWriter, $asInstanceOf, equals, asInstanceOf, initializeLogIfNecessary, synchronized, $isInstanceOf, logTrace, isTraceEnabled, deserialize, initializeLogIfNecessary$default$2, logName, notifyAll, purge, isInstanceOf, VERSION, getLatest, <init>, isBatchFile, ==, clone, purgeAfter, batchIdToPath, $init$, validateVersion, fileManager, toString, logError, !=, get, getClass, logWarning, batchFilesFilter, ne, serialize, pathToBatchId, add, getOrderedBatchFiles, eq, log, ##, finalize, hashCode, logDebug, logInfo.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala: Set(metadataPath, KafkaSourceInitialOffsetWriter, asInstanceOf, synchronized, isInstanceOf, <init>, ==, toString, !=, get, logWarning, ne, add, hashCode, logDebug, logInfo)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala: Set(metadataPath, KafkaSourceInitialOffsetWriter, asInstanceOf, isInstanceOf, <init>, ==, toString, !=, get, logWarning, ne, add, logDebug, logInfo)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataConsumer.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataConsumer.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataConsumer.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataConsumer.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataConsumer.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, unapply, curried, _consumer, wait, copy$default$2, $asInstanceOf, topicPartition, _offsetAfterPoll$access$2, productArity, equals, FetchedRecord, clusterConfig, offsetAfterPoll, asInstanceOf, initializeLogIfNecessary, _nextOffsetInFetchedData$access$1, previous, synchronized, $isInstanceOf, tupled, logTrace, canEqual, isTraceEnabled, initializeLogIfNecessary$default$2, productPrefix, withNewPoll, logName, groupId, notifyAll, _records$access$0, isInstanceOf, nextOffsetToFetch, kafkaParamsWithSecurity, kafkaParams, KafkaDataConsumer, <init>, InternalKafkaConsumer, apply, ==, clone, FetchedData, UNKNOWN_OFFSET, $init$, next, fetch, AvailableOffsetRange, copy$default$3, copy, reset, earliest, toString, logError, !=, get, release, getClass, latest, logWarning, copy$default$1, close, nextOffsetInFetchedData, ne, withRecord, getAvailableOffsetRange, hasNext, CacheKey, eq, productIterator, log, record, acquire, ##, finalize, productElement, hashCode, getOrRetrieveConsumer, logDebug, logInfo.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceRDD.scala: Set(topicPartition, asInstanceOf, isInstanceOf, KafkaDataConsumer, <init>, apply, ==, AvailableOffsetRange, earliest, toString, logError, get, release, latest, ne, getAvailableOffsetRange, eq, acquire, logInfo)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala: Set(topicPartition, asInstanceOf, synchronized, isInstanceOf, kafkaParams, KafkaDataConsumer, <init>, apply, ==, next, AvailableOffsetRange, earliest, toString, !=, get, release, latest, logWarning, close, ne, getAvailableOffsetRange, eq, acquire, logInfo)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchPartitionReader.scala: Set(topicPartition, asInstanceOf, isInstanceOf, KafkaDataConsumer, <init>, apply, ==, AvailableOffsetRange, earliest, toString, !=, get, release, latest, getAvailableOffsetRange, eq, record, acquire)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/FetchedDataPool.scala: Set(asInstanceOf, synchronized, isInstanceOf, KafkaDataConsumer, <init>, ==, FetchedData, UNKNOWN_OFFSET, reset, toString, get, logWarning, nextOffsetInFetchedData, CacheKey, eq)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/InternalKafkaConsumerPool.scala: Set(topicPartition, asInstanceOf, isInstanceOf, kafkaParams, KafkaDataConsumer, <init>, InternalKafkaConsumer, apply, ==, logError, get, logWarning, close, CacheKey)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceRDD.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceRDD.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceRDD.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceRDD.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceRDD.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	creationSite, zipPartitions, markCheckpointed, notify, mapPartitionsWithIndex$default$2, unpersist, sortBy$default$2, parent, isLocallyCheckpointed, getOrCompute, distinct$default$2, partitioner, coalesce, name, count, wait, copy$default$2, $asInstanceOf, isCheckpointedAndMaterialized, mapPartitions, setName, KafkaSourceRDDOffsetRange, topicPartition, size, union, coalesce$default$3, zip, localCheckpoint, map, productArity, subtract, equals, pipe$default$5, intersection, sortBy$default$3, foreachPartition, countApprox$default$2, scope, barrier, asInstanceOf, context, initializeLogIfNecessary, subtract$default$3, getPreferredLocations, glom, offsetRange, sortBy, pipe$default$6, KafkaSourceRDDPartition, doCheckpoint, synchronized, pipe$default$2, repartition$default$2, partition, aggregate, $isInstanceOf, compute, mapPartitions$default$2, min, getCheckpointFile, isBarrier, untilOffset, fold, getOutputDeterministicLevel, logTrace, canEqual, treeAggregate$default$4, copy$default$4, isTraceEnabled, initializeLogIfNecessary$default$2, zipWithUniqueId, productPrefix, iterator, coalesce$default$4, fromOffset, countApprox, logName, notifyAll, countApproxDistinct$default$1, conf, getNarrowAncestors, preferredLoc, cache, getNumPartitions, isInstanceOf, filter, pipe$default$3, countByValueApprox$default$3, unpersist$default$1, isBarrier_, persist, checkpointData, <init>, isCheckpointed, id, mapPartitionsWithIndexInternal, countApproxDistinct, max, outputDeterministicLevel, randomSampleWithRange, toDebugString, ++, flatMap, take, countByValue$default$1, KafkaSourceRDD, groupBy, treeReduce$default$2, ==, randomSplit$default$2, groupBy$default$4, clone, distinct, retag, foreach, treeReduce, toLocalIterator, sparkContext, reduce, saveAsTextFile, $init$, takeSample$default$3, zipWithIndex, getStorageLevel, checkpoint, first, countByValue, countByValueApprox$default$2, elementClassTag, copy$default$3, sample, copy, pipe$default$7, toString, mapPartitionsInternal, preferredLocations, logError, !=, topic, partitions, collect, getClass, pipe, logWarning, getPartitions, copy$default$1, pipe$default$4, cartesian, repartition, mapPartitionsWithIndexInternal$default$2, collectPartitions, mapPartitionsInternal$default$2, clearDependencies, isEmpty, sample$default$3, ne, countByValueApprox, getDependencies, mapPartitionsWithIndex, intersection$default$3, keyBy, randomSplit, top, coalesce$default$2, getCreationSite, computeOrReadCheckpoint, dependencies, saveAsObjectFile, mapPartitionsWithIndexInternal$default$3, toJavaRDD, eq, isReliablyCheckpointed, productIterator, withScope, log, ##, finalize, treeAggregate, index, productElement, hashCode, takeOrdered, logDebug, firstParent, logInfo, takeSample.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala: Set(setName, KafkaSourceRDDOffsetRange, topicPartition, size, map, asInstanceOf, sortBy, synchronized, min, untilOffset, fromOffset, conf, preferredLoc, isInstanceOf, filter, <init>, flatMap, KafkaSourceRDD, ==, foreach, sparkContext, toString, !=, logWarning, isEmpty, ne, hashCode, logDebug, logInfo)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala: Set(setName, KafkaSourceRDDOffsetRange, topicPartition, map, sortBy, untilOffset, fromOffset, conf, <init>, KafkaSourceRDD, sparkContext, toString, !=, topic, ne, logInfo)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	CONSUMER_CACHE_TIMEOUT, notify, package, wait, $asInstanceOf, CONSUMER_CACHE_CAPACITY, equals, asInstanceOf, PartitionOffsetMap, synchronized, $isInstanceOf, CONSUMER_CACHE_JMX_ENABLED, notifyAll, isInstanceOf, PRODUCER_CACHE_TIMEOUT, CONSUMER_CACHE_EVICTOR_THREAD_RUN_INTERVAL, FETCHED_DATA_CACHE_EVICTOR_THREAD_RUN_INTERVAL, ==, clone, toString, !=, getClass, ne, eq, ##, finalize, hashCode, FETCHED_DATA_CACHE_TIMEOUT.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeCalculator.scala: Set(package, asInstanceOf, PartitionOffsetMap, isInstanceOf, ==, toString, eq, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala: Set(package, asInstanceOf, PartitionOffsetMap, isInstanceOf, ==, toString, !=, ne)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala: Set(package, asInstanceOf, PartitionOffsetMap, synchronized, isInstanceOf, ==, toString, !=, ne, eq)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala: Set(package, asInstanceOf, PartitionOffsetMap, synchronized, isInstanceOf, ==, toString, !=, ne, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/CachedKafkaProducer.scala: Set(package, isInstanceOf, PRODUCER_CACHE_TIMEOUT, !=)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetReader.scala: Set(package, asInstanceOf, PartitionOffsetMap, synchronized, isInstanceOf, ==, toString, !=, ne)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/FetchedDataPool.scala: Set(package, asInstanceOf, synchronized, isInstanceOf, FETCHED_DATA_CACHE_EVICTOR_THREAD_RUN_INTERVAL, ==, toString, eq, FETCHED_DATA_CACHE_TIMEOUT)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/InternalKafkaConsumerPool.scala: Set(CONSUMER_CACHE_TIMEOUT, package, CONSUMER_CACHE_CAPACITY, asInstanceOf, CONSUMER_CACHE_JMX_ENABLED, isInstanceOf, CONSUMER_CACHE_EVICTOR_THREAD_RUN_INTERVAL, ==)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchWrite.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchWrite.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchWrite.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchWrite.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchWrite.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, $asInstanceOf, commit, equals, asInstanceOf, synchronized, useCommitCoordinator, $isInstanceOf, KafkaBatchWrite, notifyAll, isInstanceOf, <init>, ==, clone, createBatchWriterFactory, toString, !=, getClass, ne, onDataWriterCommit, eq, ##, finalize, hashCode, abort.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala: Set(asInstanceOf, KafkaBatchWrite, isInstanceOf, <init>, ==, toString, !=, ne, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package-info.java...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package-info.java...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package-info.java)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package-info.java)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/package-info.java source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeLimit.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeLimit.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeLimit.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeLimit.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeLimit.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, SpecificOffsetRangeLimit, wait, $asInstanceOf, LATEST, EarliestOffsetRangeLimit, productArity, equals, asInstanceOf, synchronized, topicTimestamps, $isInstanceOf, partitionOffsets, canEqual, productPrefix, notifyAll, isInstanceOf, SpecificTimestampRangeLimit, <init>, LatestOffsetRangeLimit, ==, clone, $init$, KafkaOffsetRangeLimit, copy, toString, !=, getClass, copy$default$1, ne, eq, productIterator, ##, finalize, productElement, hashCode, EARLIEST.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceRDD.scala: Set(LATEST, asInstanceOf, isInstanceOf, <init>, ==, KafkaOffsetRangeLimit, toString, ne, eq, EARLIEST)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatch.scala: Set(EarliestOffsetRangeLimit, <init>, LatestOffsetRangeLimit, KafkaOffsetRangeLimit, toString, !=, ne)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala: Set(SpecificOffsetRangeLimit, LATEST, EarliestOffsetRangeLimit, asInstanceOf, partitionOffsets, isInstanceOf, SpecificTimestampRangeLimit, <init>, LatestOffsetRangeLimit, ==, KafkaOffsetRangeLimit, toString, !=, ne, hashCode, EARLIEST)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala: Set(SpecificOffsetRangeLimit, EarliestOffsetRangeLimit, asInstanceOf, topicTimestamps, partitionOffsets, isInstanceOf, SpecificTimestampRangeLimit, <init>, LatestOffsetRangeLimit, ==, KafkaOffsetRangeLimit, toString, !=, ne)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala: Set(SpecificOffsetRangeLimit, EarliestOffsetRangeLimit, asInstanceOf, synchronized, topicTimestamps, partitionOffsets, isInstanceOf, SpecificTimestampRangeLimit, <init>, LatestOffsetRangeLimit, ==, KafkaOffsetRangeLimit, toString, !=, ne, eq)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchPartitionReader.scala: Set(LATEST, asInstanceOf, isInstanceOf, <init>, ==, KafkaOffsetRangeLimit, toString, !=, eq, EARLIEST)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala: Set(SpecificOffsetRangeLimit, EarliestOffsetRangeLimit, asInstanceOf, synchronized, topicTimestamps, partitionOffsets, isInstanceOf, SpecificTimestampRangeLimit, <init>, LatestOffsetRangeLimit, ==, KafkaOffsetRangeLimit, toString, !=, ne, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala: Set(EarliestOffsetRangeLimit, <init>, LatestOffsetRangeLimit, KafkaOffsetRangeLimit, toString, !=, ne)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetReader.scala: Set(SpecificOffsetRangeLimit, LATEST, EarliestOffsetRangeLimit, asInstanceOf, synchronized, topicTimestamps, partitionOffsets, isInstanceOf, SpecificTimestampRangeLimit, <init>, LatestOffsetRangeLimit, ==, KafkaOffsetRangeLimit, toString, !=, ne, EARLIEST)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/ConsumerStrategy.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/ConsumerStrategy.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/ConsumerStrategy.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/ConsumerStrategy.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/ConsumerStrategy.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, topics, wait, $asInstanceOf, setAuthenticationConfigIfNeeded, productArity, equals, topicPattern, asInstanceOf, synchronized, $isInstanceOf, SubscribeStrategy, canEqual, productPrefix, notifyAll, ConsumerStrategy, isInstanceOf, createConsumer, SubscribePatternStrategy, <init>, ==, clone, $init$, copy, toString, !=, partitions, getClass, copy$default$1, ne, eq, productIterator, AssignStrategy, ##, finalize, productElement, hashCode.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatch.scala: Set(ConsumerStrategy, <init>, toString, !=, ne)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala: Set(topics, asInstanceOf, SubscribeStrategy, ConsumerStrategy, isInstanceOf, SubscribePatternStrategy, <init>, ==, toString, !=, partitions, ne, AssignStrategy, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetReader.scala: Set(asInstanceOf, synchronized, ConsumerStrategy, isInstanceOf, createConsumer, <init>, ==, toString, !=, partitions, ne)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala: Set(ConsumerStrategy, <init>, toString, !=, ne)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/CachedKafkaProducer.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/CachedKafkaProducer.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/CachedKafkaProducer.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/CachedKafkaProducer.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/CachedKafkaProducer.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, $asInstanceOf, equals, clear, asInstanceOf, initializeLogIfNecessary, synchronized, $isInstanceOf, logTrace, isTraceEnabled, initializeLogIfNecessary$default$2, logName, notifyAll, isInstanceOf, ==, getOrCreate, clone, $init$, toString, logError, !=, getClass, logWarning, close, CachedKafkaProducer, ne, eq, log, ##, finalize, hashCode, logDebug, logInfo.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriteTask.scala: Set(asInstanceOf, ==, getOrCreate, toString, !=, CachedKafkaProducer)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataWriter.scala: Set(getOrCreate, toString, !=, close, CachedKafkaProducer)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriteTask.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriteTask.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriteTask.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Including /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataWriter.scala by /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriteTask.scala[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataWriter.scala, /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriteTask.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriteTask.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, execute, wait, $asInstanceOf, projection, KafkaRowWriter, equals, failedWrite, asInstanceOf, synchronized, $isInstanceOf, checkForErrors, KafkaWriteTask, notifyAll, isInstanceOf, <init>, ==, sendRow, clone, toString, !=, getClass, close, ne, eq, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaStreamingWrite.scala: Set(asInstanceOf, isInstanceOf, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchWrite.scala: Set(asInstanceOf, isInstanceOf, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriter.scala: Set(execute, KafkaWriteTask, <init>, ==, close)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaDataWriter.scala: Set(KafkaRowWriter, checkForErrors, <init>, sendRow, toString, !=, close)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetReader.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetReader.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetReader.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetReader.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetReader.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, _consumer, wait, $asInstanceOf, equals, asInstanceOf, initializeLogIfNecessary, fetchTopicPartitions, synchronized, $isInstanceOf, logTrace, isTraceEnabled, initializeLogIfNecessary$default$2, fetchPartitionOffsets, logName, notifyAll, isInstanceOf, driverKafkaParams, consumer, <init>, ==, execContext, clone, $init$, toString, logError, !=, KafkaOffsetReader, fetchLatestOffsets, getClass, logWarning, fetchEarliestOffsets, close, fetchSpecificTimestampBasedOffsets, ne, kafkaReaderThread, eq, log, maxOffsetFetchAttempts, ##, finalize, hashCode, logDebug, offsetFetchAttemptIntervalMs, fetchSpecificOffsets, logInfo.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatch.scala: Set(fetchPartitionOffsets, <init>, toString, !=, KafkaOffsetReader, close, ne)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala: Set(asInstanceOf, isInstanceOf, consumer, <init>, ==, toString, !=, KafkaOffsetReader, logWarning, ne, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala: Set(asInstanceOf, isInstanceOf, driverKafkaParams, consumer, <init>, ==, toString, !=, KafkaOffsetReader, fetchLatestOffsets, logWarning, fetchEarliestOffsets, close, fetchSpecificTimestampBasedOffsets, ne, logDebug, fetchSpecificOffsets, logInfo)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala: Set(asInstanceOf, synchronized, isInstanceOf, driverKafkaParams, consumer, <init>, ==, toString, !=, KafkaOffsetReader, fetchLatestOffsets, logWarning, fetchEarliestOffsets, close, fetchSpecificTimestampBasedOffsets, ne, eq, fetchSpecificOffsets, logInfo)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala: Set(asInstanceOf, synchronized, isInstanceOf, driverKafkaParams, consumer, <init>, ==, toString, !=, KafkaOffsetReader, fetchLatestOffsets, logWarning, fetchEarliestOffsets, close, fetchSpecificTimestampBasedOffsets, ne, hashCode, logDebug, fetchSpecificOffsets, logInfo)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala: Set(fetchPartitionOffsets, <init>, toString, !=, KafkaOffsetReader, close, ne, logInfo)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, $asInstanceOf, equals, buildScan, asInstanceOf, initializeLogIfNecessary, unhandledFilters, synchronized, $isInstanceOf, logTrace, isTraceEnabled, initializeLogIfNecessary$default$2, logName, notifyAll, isInstanceOf, <init>, schema, ==, sqlContext, clone, KafkaRelation, sizeInBytes, $init$, toString, logError, !=, getClass, logWarning, ne, eq, log, ##, finalize, hashCode, logDebug, logInfo, needConversion.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala: Set(asInstanceOf, isInstanceOf, <init>, schema, ==, sqlContext, KafkaRelation, toString, !=, logWarning, ne, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeCalculator.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeCalculator.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeCalculator.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeCalculator.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaOffsetRangeCalculator.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, KafkaOffsetRange, minPartitions, wait, copy$default$2, $asInstanceOf, topicPartition, size, productArity, equals, KafkaOffsetRangeCalculator, asInstanceOf, synchronized, $isInstanceOf, untilOffset, canEqual, getRanges, copy$default$4, productPrefix, fromOffset, notifyAll, preferredLoc, isInstanceOf, <init>, apply, ==, clone, $init$, copy$default$3, copy, toString, !=, getClass, copy$default$1, getRanges$default$3, ne, eq, productIterator, ##, finalize, productElement, hashCode.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchPartitionReader.scala: Set(KafkaOffsetRange, topicPartition, asInstanceOf, untilOffset, fromOffset, isInstanceOf, <init>, apply, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatch.scala: Set(KafkaOffsetRange, untilOffset, fromOffset, <init>, apply, toString, !=, ne)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala: Set(KafkaOffsetRange, size, KafkaOffsetRangeCalculator, asInstanceOf, untilOffset, getRanges, fromOffset, isInstanceOf, <init>, apply, ==, toString, !=, ne)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/JsonUtils.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/JsonUtils.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/JsonUtils.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/JsonUtils.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/JsonUtils.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] None of the modified names appears in /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceOffset.scala. This dependency is not being considered for invalidation.[0m
[0m[[0mdebug[0m] [0m[naha] None of the modified names appears in /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala. This dependency is not being considered for invalidation.[0m
[0m[[0mdebug[0m] [0m[naha] None of the modified names appears in /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala. This dependency is not being considered for invalidation.[0m
[0m[[0mdebug[0m] [0m[naha] None of the modified names appears in /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaMicroBatchStream.scala. This dependency is not being considered for invalidation.[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, KafkaSource, wait, $asInstanceOf, commit, getBatch, equals, getSortedExecutorList, asInstanceOf, initializeLogIfNecessary, initialOffset, synchronized, $isInstanceOf, logTrace, isTraceEnabled, initializeLogIfNecessary$default$2, stop, logName, notifyAll, isInstanceOf, <init>, schema, ==, clone, $init$, toString, deserializeOffset, getOffset, logError, !=, getClass, logWarning, ne, eq, log, ##, finalize, hashCode, logDebug, logInfo.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala: Set(KafkaSource, asInstanceOf, isInstanceOf, <init>, schema, ==, toString, !=, logWarning, ne, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRecordToRowConverter.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRecordToRowConverter.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRecordToRowConverter.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRecordToRowConverter.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRecordToRowConverter.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, $asInstanceOf, toUnsafeRowProjector, equals, asInstanceOf, KafkaRecordToRowConverter, synchronized, $isInstanceOf, notifyAll, toUnsafeRowWithHeadersProjector, isInstanceOf, toInternalRowWithHeaders, <init>, toUnsafeRowWithoutHeadersProjector, ==, Record, clone, kafkaSchema, headersType, toString, !=, getClass, ne, eq, toInternalRowWithoutHeaders, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaWriter.scala: Set(KafkaRecordToRowConverter, <init>, ==, headersType)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSourceProvider.scala: Set(asInstanceOf, KafkaRecordToRowConverter, isInstanceOf, <init>, ==, kafkaSchema, toString, !=, ne, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaContinuousStream.scala: Set(toUnsafeRowProjector, asInstanceOf, KafkaRecordToRowConverter, synchronized, isInstanceOf, <init>, ==, Record, toString, !=, ne, eq)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaBatchPartitionReader.scala: Set(toUnsafeRowProjector, asInstanceOf, KafkaRecordToRowConverter, isInstanceOf, <init>, ==, Record, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaSource.scala: Set(asInstanceOf, KafkaRecordToRowConverter, synchronized, isInstanceOf, toInternalRowWithHeaders, <init>, ==, Record, kafkaSchema, toString, !=, ne, toInternalRowWithoutHeaders, hashCode)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /Users/ysir/Documents/GitHub/spark/external/kafka-0-10-sql/src/main/scala/org/apache/spark/sql/kafka010/KafkaRelation.scala: Set(KafkaRecordToRowConverter, toInternalRowWithHeaders, <init>, Record, kafkaSchema, toString, !=, ne, toInternalRowWithoutHeaders)[0m
[0m[[0mdebug[0m] [0m[naha] New invalidations:[0m
[0m[[0mdebug[0m] [0m[naha] 	Set()[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set()[0m
[0m[[0mdebug[0m] [0m[naha] Previously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0mdebug[0m] [0m[naha] 	Set()[0m
[0m[[0mdebug[0m] [0m[naha] All newly invalidated sources after taking into account (previously) recompiled sources:Set()[0m
